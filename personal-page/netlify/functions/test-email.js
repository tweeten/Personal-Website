const nodemailer = require('nodemailer');

exports.handler = async (event, context) => {
  // Only allow POST requests
  if (event.httpMethod !== 'POST') {
    return {
      statusCode: 405,
      body: JSON.stringify({ error: 'Method Not Allowed' }),
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'POST, OPTIONS'
      }
    };
  }

  // Handle preflight OPTIONS request
  if (event.httpMethod === 'OPTIONS') {
    return {
      statusCode: 200,
      headers: {
        'Access-Control-Allow-Origin': '*',
        'Access-Control-Allow-Headers': 'Content-Type',
        'Access-Control-Allow-Methods': 'POST, OPTIONS'
      }
    };
  }

  try {
    // Test configuration first
    const transporter = nodemailer.createTransport({
      host: process.env.EMAIL_HOST || 'smtp.gmail.com',
      port: process.env.EMAIL_PORT || 587,
      secure: false,
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
      },
    });

    // Verify configuration
    await transporter.verify();
    
    // Send test email
    const testEntry = {
      name: 'Test User',
      email: 'test@example.com',
      message: 'This is a test message to verify email notifications are working.',
      created_at: new Date().toISOString()
    };

    const date = new Date().toLocaleString();
    const emailBody = `
New Contact Form Submission

Name: ${testEntry.name}
Email: ${testEntry.email}
Message: ${testEntry.message}
Submitted: ${date}

---
This message was automatically generated by your personal website contact form processor.
    `.trim();

    const info = await transporter.sendMail({
      from: process.env.EMAIL_FROM || process.env.EMAIL_USER,
      to: process.env.EMAIL_TO,
      subject: `Test Email - Contact Form Verification - ${new Date().toLocaleDateString()}`,
      text: emailBody,
      html: emailBody.replace(/\n/g, '<br>'),
    });

    console.log('Test email sent successfully:', info.messageId);

    return {
      statusCode: 200,
      body: JSON.stringify({ 
        success: true, 
        message: 'Test email sent successfully. Check your inbox.',
        messageId: info.messageId
      }),
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    };

  } catch (error) {
    console.error('Test email failed:', error);
    
    return {
      statusCode: 500,
      body: JSON.stringify({ 
        success: false, 
        error: 'Test email failed',
        details: process.env.NODE_ENV === 'development' ? error.message : 'Internal server error'
      }),
      headers: {
        'Content-Type': 'application/json',
        'Access-Control-Allow-Origin': '*'
      }
    };
  }
};
